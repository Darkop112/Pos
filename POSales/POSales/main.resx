<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>